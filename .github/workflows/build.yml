name: Build

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: ${{ matrix.cfg.name }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          -
            name: macos
            os: macos-latest
            flags: ''
          -
            name: windows-x64
            os: windows-latest
            flags: -DCMAKE_GENERATOR_PLATFORM=x64
          -
            name: windows-x32
            os: windows-latest
            flags: -DCMAKE_GENERATOR_PLATFORM=Win32
          -
            name: windows-arm
            os: windows-latest
            flags: -DCMAKE_GENERATOR_PLATFORM=ARM
          -
            name: windows-arm64
            os: windows-latest
            flags: -DCMAKE_GENERATOR_PLATFORM=ARM64
          -
            name: ubuntu
            os: ubuntu-latest
            flags: ''

    steps:
      - uses: actions/checkout@v2
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ matrix.cfg.name }}-build
      -
        name: Configure
        run: cmake -S . -B build ${{ matrix.cfg.flags }} -DCMAKE_BUILD_TYPE=Release -DTMPL_LIB_BUILD_SHARED=ON
      -
        name: Build lib
        run: cmake --build build --config Release --target lib -j2
      -
        name: Build app
        run: cmake --build build --config Release --target app -j2
      -
        name: Pack
        run: cmake --build build --config Release --target package -j2
      -
        if: github.event_name == 'pull_request'
        name: Upload
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.cfg.name }}-artefact
          path: build/*.zip
      -
        if: github.event_name == 'release'
        id: prepare
        name: Get name
        shell: bash
        run: echo ::set-output name=artefact::$(ls _build/ | grep .zip)
      -
        if: github.event_name == 'release'
        name: Deploy artefacts
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/${{ steps.prepare.outputs.artefact }}
          asset_name: ${{ matrix.cfg.os }}-${{ steps.prepare.outputs.artefact }}
          asset_content_type: application/zip
