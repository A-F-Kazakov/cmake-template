name: Build

on:
  push:
  release:
    types: [created, edited]

jobs:
  build:
    name: ${{ matrix.cfg.name }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
        -
          name: MacOS
          os: macos-latest
        -
          name: Windows
          os: windows-latest
        -
          name: Linux
          os: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      -
        name: Cache
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ matrix.cfg.name }}-build
      -
        name: Configure for tests
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DTMPL_LIB_BUILD_SHARED=OFF -DTMPL_LIB_BUILD_TESTS=ON
      -
        name: Tests 
        working_directory: build
        run: ctest -C Debug -j2
      -
        name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DTMPL_LIB_BUILD_SHARED=ON -DTMPL_LIB_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=install
      -
        name: Build lib
        run: cmake --build build --config Release --target lib -j2
      -
        name: Build app
        run: cmake --build build --config Release --target app -j2
      -
        name: Pack
        run: cmake --install build --config Release --target package -j2
      -
        name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: build/*.zip
          name: ${{ matrix.cfg.name }}-artefact

  publish:
    name: Deploy artefacts
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      -
        name: Upload to Release
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/*.zip
          asset_name: some
          asset_content_type: application/zip
